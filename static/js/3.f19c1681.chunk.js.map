{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","src","ava","dialogLink","to","name","Message","message","right","left","avatar","messageText","DialogsForm","formik","useFormik","initialValues","onSubmit","values","addMessage","resetForm","handleSubmit","onChange","handleChange","value","type","Dialogs","dialogsElement","dialogsPage","dialogs","map","d","messagesElements","messages","m","isAuth","dialogItems","compose","connect","state","dispatch","text","addMessageActionCreator","withAuthRedirect","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,WAAa,iC,oBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,MAAQ,yB,oBCAtKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,0B,4FCa1FC,EAXI,SAACC,GAClB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACE,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACE,qBAAKC,IAAKP,EAAMQ,MAChB,cAAC,IAAD,CAASL,UAAWC,IAAEK,WAAYC,GAAIT,EAAtC,SAA8CD,EAAMW,W,kBCI3CC,EAXC,SAACZ,GACf,OACE,sBAAKG,UAAS,UAAKC,IAAES,QAAP,YAAqBb,EAAME,GAAM,EAAKE,IAAEU,MAAQV,IAAEW,MAAhE,UACE,qBAAKZ,UAAWC,IAAEY,OAAQT,IAAKP,EAAMQ,MACrC,oBAAIL,UAAWC,IAAEa,YAAjB,SACGjB,EAAMa,c,wCCyBAK,EA9BK,SAAClB,GAEnB,IAAMmB,EAASC,YAAU,CACvBC,cAAe,CACbR,QAAS,IAEXS,SAAU,SAAAC,GACRC,EAAWD,EAAOV,SAClBM,EAAOM,eAIPD,EAAa,SAACX,GAChBb,EAAMwB,WAAWX,IAGnB,OACE,uBAAMS,SAAUH,EAAOO,aAAvB,UACE,0BACAf,KAAK,UACLT,GAAG,UACHyB,SAAUR,EAAOS,aACjBC,MAAOV,EAAOI,OAAOV,UAErB,wBAAQiB,KAAK,SAAb,wECISC,EAvBC,SAAC/B,GAEf,IAAIgC,EAAiBhC,EAAMiC,YAAYC,QAAQC,KAAK,SAAAC,GAClD,OAAO,cAAC,EAAD,CAAY5B,IAAK4B,EAAE5B,IAAgBG,KAAMyB,EAAEzB,KAAMT,GAAIkC,EAAElC,IAA1BkC,EAAElC,OAGpCmC,EAAmBrC,EAAMiC,YAAYK,SAASH,KAAK,SAAAI,GACrD,OAAO,cAAC,EAAD,CAAS/B,IAAK+B,EAAE/B,IAAgBK,QAAS0B,EAAE1B,QAASX,GAAIqC,EAAErC,IAAhCqC,EAAErC,OAGrC,OAAIF,EAAMwC,OAGR,sBAAKrC,UAAWC,IAAE8B,QAAlB,UACE,qBAAK/B,UAAWC,IAAEqC,YAAlB,SAAgCT,IAChC,sBAAK7B,UAAWC,IAAEkC,SAAlB,UACGD,EACD,cAAC,EAAD,CAAab,WAAYxB,EAAMwB,mBAPZ,cAAC,IAAD,CAAUd,GAAI,a,gBCK1BgC,sBACbC,aAfoB,SAACC,GACrB,MAAO,CACLX,YAAaW,EAAMX,gBAIE,SAACY,GACxB,MAAO,CACLrB,WAAY,SAACsB,GACXD,EAASE,YAAwBD,SAOrCE,IAFaN,CAGbX,I,mJCrBEkB,EAA6B,SAACL,GAAD,MAAY,CACzCJ,OAAQI,EAAMM,KAAKV,SAGVQ,EAAmB,SAACG,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAIC,KAAKrD,MAAMwC,OAER,cAACW,EAAD,eAAeE,KAAKrD,QAFG,cAAC,IAAD,CAAUU,GAAG,gBAHF,GACb4C,IAAMH,WAYtC,OAHqCR,YAAQM,EAARN,CAAoCS","file":"static/js/3.f19c1681.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"dialogLink\":\"DialogItem_dialogLink__1DOpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"avatar\":\"Message_avatar__2zGiU\",\"messageText\":\"Message_messageText__1G9P6\",\"left\":\"Message_left__27PbW\",\"right\":\"Message_right__1lza_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\"};","import s from \"./DialogItem.module.css\";\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let path = `/dialogs/${props.id}`;\n\n  return (\n    <div className={s.dialog + ' ' + s.active} >\n      <img src={props.ava}/>\n      <NavLink className={s.dialogLink} to={path} >{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;","import s from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={`${s.message} ${ ((props.id) % 2) ? s.right : s.left}`}>\n      <img className={s.avatar} src={props.ava} />\n      <h3 className={s.messageText}>\n        {props.message}\n      </h3> \n    </div>\n  );\n};\n\nexport default Message;","import {useFormik} from 'formik';\n\nconst DialogsForm = (props) => {\n\n  const formik = useFormik({\n    initialValues: {\n      message: ''\n    },\n    onSubmit: values => {\n      addMessage(values.message);\n      formik.resetForm();\n    }\n  })\n  \n  let addMessage = (message) => {\n    props.addMessage(message);\n  }\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <textarea\n      name='message'\n      id='message'\n      onChange={formik.handleChange}\n      value={formik.values.message}\n      />\n      <button type='submit' >Отправить</button>\n    </form>\n        \n  );\n}\n\nexport default DialogsForm;","import DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport React from 'react';\nimport { Redirect } from \"react-router\";\nimport DialogsForm from \"./DialogsForm\";\n\nconst Dialogs = (props) => {\n  \n  let dialogsElement = props.dialogsPage.dialogs.map( d => {\n    return <DialogItem ava={d.ava} key={d.id} name={d.name} id={d.id} />\n  });\n\n  let messagesElements = props.dialogsPage.messages.map( m => {\n    return <Message ava={m.ava} key={m.id} message={m.message} id={m.id} />;\n  });\n  \n  if(!props.isAuth) return <Redirect to={'./login'}/>\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>{dialogsElement}</div>\n      <div className={s.messages}>\n        {messagesElements}\n        <DialogsForm addMessage={props.addMessage} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport {\n  addMessageActionCreator,\n} from '../../redux/dialogs-reducer';\nimport Dialogs from \"./Dialogs\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (text) => {\n      dispatch(addMessageActionCreator(text));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n  });\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to='/login/'/>\n\n      return <Component {...this.props} />\n    };\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent;\n}"],"sourceRoot":""}