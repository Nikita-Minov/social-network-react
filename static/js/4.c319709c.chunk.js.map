{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/CreatePost/CreatePost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","small","userPhoto","fullName","lookingForAJob","contacts","vk","github","facebook","instagram","youtube","twitter","Preloader","Post","item","alt","post","likesCount","CreatePost","formik","useFormik","initialValues","onSubmit","values","addPost","resetForm","handleSubmit","name","id","handleChange","type","MyPosts","postsElements","profilePage","posts","map","p","postsBlock","MyPostsContainer","connect","state","newPostText","dispatch","action","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","isAuth","to","React","Component","compose","auth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/4.c319709c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__K96Gt\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status)\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || '-------'}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport userPhoto from '../../../assets/img/user.jpg';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div></div>\n      <div className={s.descriptionBlock}>\n        <img\n          src={\n            profile.photos.small == null\n              ? userPhoto\n              : profile.photos.small\n          }\n        />\n        <h1>{profile.fullName}</h1>\n        <h2>{profile.lookingForAJob ? 'Ищет работу' : 'Уже работает'}</h2>\n        <ProfileStatusWithHooks\n          status={status}\n          updateStatus={updateStatus}\n        />\n        <h3>Contacts</h3>\n        <ul>\n          <li>vk: {profile.contacts.vk}</li>\n          <li>github: {profile.contacts.github}</li>\n          <li>facebook: {profile.contacts.facebook}</li>\n          <li>instagram: {profile.contacts.instagram}</li>\n          <li>youtube: {profile.contacts.youtube}</li>\n          <li>twitter: {profile.contacts.twitter}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import s from \"./Post.module.css\"\n\nconst Post = (props) => {\n  return (\n    <div className={s.item} >\n      <img src=\"https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg\" alt=\"monkey\"/>\n      {props.post}\n      <div>\n        <span>Likes: {props.likesCount}</span>\n      </div>   \n    </div> \n    \n  );\n}\n\nexport default Post;","import React from 'react';\nimport {Formik, useFormik} from 'formik';\n\n\nconst CreatePost = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      post: '',\n    },\n    onSubmit: values => {\n      addPost(values.post);\n      formik.resetForm();\n    }\n  })\n\n   let addPost = (post) => {\n     props.addPost(post);\n   };\n\n  return (\n    <form onSubmit={formik.handleSubmit} >\n      <div>\n        <textarea\n        name='post'\n        id='post'\n        onChange={formik.handleChange} \n        value={formik.values.post} />\n      </div>\n      <div>\n        <button type='submit' >Add post</button> \n      </div>     \n    </form>  \n  );\n}\n\nexport default CreatePost;","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport \"./Post/Post\";\nimport Post from \"./Post/Post\";\nimport CreatePost from './CreatePost/CreatePost';\n\nconst MyPosts = (props) => {\n\n  let postsElements = props.profilePage.posts.map(p => {\n    return (\n      <Post\n        key={p.id}\n        post={p.post}\n        likesCount={p.likesCount}\n        id={p.id}\n      />\n    );\n  });\n\n  return (\n    <div className={s.postsBlock} >\n      <div>\n        <h1>\n          My posts\n        </h1>\n        <CreatePost addPost={props.addPost} />\n      </div>\n      <div className={s.posts} >\n        {postsElements}\n      </div>\n      \n    </div>  \n  );\n}\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport \"./Post/Post\";\n\nlet mapStateToProps = (state) => {\n  return {\n    profilePage: state.profilePage,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (post) => {\n      let action = addPostActionCreator(post)\n      dispatch(action);\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer store={props.store} />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n} from '../../redux/profile-reducer';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    if (!this.props.isAuth) return <Redirect to={'./login'} />;\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport {connect} from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n  });\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if(!this.props.isAuth) return <Redirect to='/login/'/>\n\n      return <Component {...this.props} />\n    };\n\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n\n  return ConnectedAuthRedirectComponent;\n}"],"sourceRoot":""}